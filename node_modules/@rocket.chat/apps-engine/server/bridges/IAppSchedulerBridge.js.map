{"version":3,"sources":["src/server/bridges/IAppSchedulerBridge.ts"],"names":[],"mappings":"","file":"IAppSchedulerBridge.js","sourcesContent":["import {\n    IOnetimeSchedule,\n    IProcessor,\n    IRecurringSchedule,\n} from '../../definition/scheduler';\n\n/**\n * The interface which should be implemented for the apps to have\n * access to the Job Scheduler\n */\nexport interface IAppSchedulerBridge {\n    /**\n     * Register processors that can be scheduled to run\n     *\n     * @param {Array<IProcessor>} processors An array of processors\n     * @param appId the id of the app calling this\n     */\n    registerProcessors(processor: Array<IProcessor>, appId: string): Promise<void>;\n\n    /**\n     * Schedules a registered processor to run _once_.\n     *\n     * @param {IOnetimeSchedule} job\n     * @param appId the id of the app calling this\n     */\n    scheduleOnce(job: IOnetimeSchedule, appId: string): Promise<void>;\n    /**\n     * Schedules a registered processor to run in recurrencly acording to a given interval\n     *\n     * @param {IRecurringSchedule} job\n     * @param appId the id of the app calling this\n     */\n    scheduleRecurring(job: IRecurringSchedule, appId: string): Promise<void>;\n    /**\n     * Cancels a running job given its jobId\n     *\n     * @param {string} jobId\n     * @param appId the id of the app calling this\n     */\n    cancelJob(jobId: string, appId: string): Promise<void>;\n    /**\n     * Cancels all the running jobs from the app\n     *\n     * @param appId the id of the app calling this\n     */\n    cancelAllJobs(appId: string): Promise<void>;\n}\n"]}