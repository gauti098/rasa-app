{"version":3,"sources":["src/server/compiler/modules/index.ts"],"names":[],"mappings":";;;AAAA,+BAAyC;AAEzC,IAAY,sBAOX;AAPD,WAAY,sBAAsB;IAC9B,uCAAa,CAAA;IACb,qCAAW,CAAA;IACX,2CAAiB,CAAA;IACjB,2CAAiB,CAAA;IACjB,2CAAiB,CAAA;IACjB,qCAAW,CAAA;AACf,CAAC,EAPW,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAOjC;AAED,MAAa,2BAA4B,SAAQ,KAAK;IAClD,YAAY,MAAc,EAAE,IAAY;QACpC,KAAK,CAAC,sBAAsB,IAAI,cAAc,MAAM,eAAe,CAAC,CAAC;IACzE,CAAC;CACJ;AAJD,kEAIC;AAED,MAAM,cAAc,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAElC,MAAM,aAAa,GAAG;IAClB,IAAI,EAAE,cAAc;IACpB,GAAG,EAAE,cAAc;IACnB,MAAM,EAAE,cAAc;IACtB,MAAM,EAAE,cAAc;IACtB,MAAM,EAAE,cAAc;IACtB,GAAG,EAAE,sBAAgB;CACxB,CAAC;AAEF,SAAgB,mBAAmB,CAAC,MAA8B,EAAE,KAAa;IAC7E,MAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IAEvC,OAAO,IAAI,KAAK,CACZ,cAAc;IACd,0EAA0E;IAC1E,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,CAAC,CAAC,CAC3D,CAAC;AACN,CAAC;AARD,kDAQC","file":"index.js","sourcesContent":["import { netModuleHandler } from './net';\n\nexport enum AllowedInternalModules {\n    path = 'path',\n    url = 'url',\n    crypto = 'crypto',\n    buffer = 'buffer',\n    stream = 'stream',\n    net = 'net',\n}\n\nexport class ForbiddenNativeModuleAccess extends Error {\n    constructor(module: string, prop: string) {\n        super(`Access to property ${prop} in module ${module} is forbidden`);\n    }\n}\n\nconst defaultHandler = () => ({});\n\nconst proxyHandlers = {\n    path: defaultHandler,\n    url: defaultHandler,\n    crypto: defaultHandler,\n    buffer: defaultHandler,\n    stream: defaultHandler,\n    net: netModuleHandler,\n};\n\nexport function requireNativeModule(module: AllowedInternalModules, appId: string) {\n    const requiredModule = require(module);\n\n    return new Proxy(\n        requiredModule,\n        // Creates a proxy handler that is aware of the appId requiring the module\n        Reflect.apply(proxyHandlers[module], undefined, [appId]),\n    );\n}\n"]}