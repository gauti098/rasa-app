{"version":3,"sources":["src/server/compiler/modules/net.ts"],"names":[],"mappings":";;;AAEA,wBAAgD;AAChD,8EAA2E;AAC3E,8EAA2E;AAC3E,qEAAkE;AAElE,MAAM,kBAAkB,GAAG;IACvB,cAAc,EAAE,QAAQ;CAC3B,CAAC;AAEK,MAAM,gBAAgB,GAAG,CAAC,KAAa,EAA4B,EAAE,CAAC,CAAC;IAC1E,GAAG,CAAC,MAAM,EAAE,IAAY,EAAE,QAAQ;QAC9B,IAAI,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACnC,MAAM,IAAI,8BAA2B,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SACtD;QAED,IAAI,CAAC,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YAC/E,MAAM,IAAI,6CAAqB,CAAC;gBAC5B,KAAK;gBACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,UAAU,CAAC,OAAO,CAAC;gBACvD,UAAU,EAAE,OAAO,IAAI,EAAE;aAC5B,CAAC,CAAC;SACN;QAED,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC/C,CAAC;CACJ,CAAC,CAAC;AAhBU,QAAA,gBAAgB,oBAgB1B","file":"net.js","sourcesContent":["import * as net from 'net';\n\nimport { ForbiddenNativeModuleAccess } from '.';\nimport { PermissionDeniedError } from '../../errors/PermissionDeniedError';\nimport { AppPermissionManager } from '../../managers/AppPermissionManager';\nimport { AppPermissions } from '../../permissions/AppPermissions';\n\nconst netModuleBlockList = [\n    'createServer', 'Server',\n];\n\nexport const netModuleHandler = (appId: string): ProxyHandler<typeof net> => ({\n    get(target, prop: string, receiver) {\n        if (netModuleBlockList.includes(prop)) {\n            throw new ForbiddenNativeModuleAccess('net', prop);\n        }\n\n        if (!AppPermissionManager.hasPermission(appId, AppPermissions.networking.default)) {\n            throw new PermissionDeniedError({\n                appId,\n                missingPermissions: [AppPermissions.networking.default],\n                methodName: `net.${prop}`,\n            });\n        }\n\n        return Reflect.get(target, prop, receiver);\n    },\n});\n"]}