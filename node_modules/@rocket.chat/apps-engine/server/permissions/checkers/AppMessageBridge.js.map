{"version":3,"sources":["src/server/permissions/checkers/AppMessageBridge.ts"],"names":[],"mappings":";;;AAIA,8EAA2E;AAC3E,8EAA2E;AAC3E,sDAAmD;AAEtC,QAAA,gBAAgB,GAAG;IAC5B,iBAAiB,CAAC,KAAa;QAC3B,IAAI,CAAC,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACzE,MAAM,IAAI,6CAAqB,CAAC;gBAC5B,KAAK;gBACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,OAAO,CAAC,IAAI,CAAC;aACpD,CAAC,CAAC;SACN;IACL,CAAC;IACD,kBAAkB,CAAC,KAAa;QAC5B,IAAI,CAAC,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC1E,MAAM,IAAI,6CAAqB,CAAC;gBAC5B,KAAK;gBACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,OAAO,CAAC,KAAK,CAAC;aACrD,CAAC,CAAC;SACN;IACL,CAAC;IACD,OAAO,CAAC,SAAiB,EAAE,KAAa;QACpC,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IACD,MAAM,CAAC,OAAiB,EAAE,KAAa;QACnC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,MAAM,CAAC,OAAiB,EAAE,KAAa;QACnC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,UAAU,CAAC,IAAW,EAAE,OAAiB,EAAE,KAAa;QACpD,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,UAAU,CAAC,IAAW,EAAE,OAAiB,EAAE,KAAa;QACpD,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,MAAM,CAAC,OAA0B,EAAE,KAAa;QAC5C,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;CACJ,CAAC","file":"AppMessageBridge.js","sourcesContent":["import { IMessage } from '../../../definition/messages';\nimport { IRoom } from '../../../definition/rooms';\nimport { IUser } from '../../../definition/users';\nimport { ITypingDescriptor } from '../../bridges/IMessageBridge';\nimport { PermissionDeniedError } from '../../errors/PermissionDeniedError';\nimport { AppPermissionManager } from '../../managers/AppPermissionManager';\nimport { AppPermissions } from '../AppPermissions';\n\nexport const AppMessageBridge = {\n    hasReadPermission(appId: string) {\n        if (!AppPermissionManager.hasPermission(appId, AppPermissions.message.read)) {\n            throw new PermissionDeniedError({\n                appId,\n                missingPermissions: [AppPermissions.message.read],\n            });\n        }\n    },\n    hasWritePermission(appId: string) {\n        if (!AppPermissionManager.hasPermission(appId, AppPermissions.message.write)) {\n            throw new PermissionDeniedError({\n                appId,\n                missingPermissions: [AppPermissions.message.write],\n            });\n        }\n    },\n    getById(messageId: string, appId: string): void {\n        return this.hasReadPermission(appId);\n    },\n    create(message: IMessage, appId: string): void {\n        return this.hasWritePermission(appId);\n    },\n    update(message: IMessage, appId: string): void {\n        return this.hasWritePermission(appId);\n    },\n    notifyUser(user: IUser, message: IMessage, appId: string): void {\n        return this.hasWritePermission(appId);\n    },\n    notifyRoom(room: IRoom, message: IMessage, appId: string): void {\n        return this.hasWritePermission(appId);\n    },\n    typing(options: ITypingDescriptor, appId: string): void {\n        return this.hasWritePermission(appId);\n    },\n};\n"]}