{"version":3,"sources":["src/server/permissions/checkers/AppSettingBridge.ts"],"names":[],"mappings":";;;AACA,8EAA2E;AAC3E,8EAA2E;AAC3E,sDAAmD;AAEtC,QAAA,gBAAgB,GAAG;IAC5B,iBAAiB,CAAC,KAAa;QAC3B,IAAI,CAAC,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACzE,MAAM,IAAI,6CAAqB,CAAC;gBAC5B,KAAK;gBACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,OAAO,CAAC,IAAI,CAAC;aACpD,CAAC,CAAC;SACN;IACL,CAAC;IACD,kBAAkB,CAAC,KAAa;QAC5B,IAAI,CAAC,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC1E,MAAM,IAAI,6CAAqB,CAAC;gBAC5B,KAAK;gBACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,OAAO,CAAC,KAAK,CAAC;aACrD,CAAC,CAAC;SACN;IACL,CAAC;IACD,MAAM,CAAC,KAAa;QAChB,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IACD,UAAU,CAAC,EAAU,EAAE,KAAa;QAChC,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,CAAC,IAAY,EAAE,KAAa;QACjC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,WAAW,CAAC,EAAU,EAAE,KAAa;QACjC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,cAAc,CAAC,EAAU,EAAE,KAAa;QACpC,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,CAAC,OAAiB,EAAE,KAAa;QACtC,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;CACJ,CAAC","file":"AppSettingBridge.js","sourcesContent":["import { ISetting } from '../../../definition/settings';\nimport { PermissionDeniedError } from '../../errors/PermissionDeniedError';\nimport { AppPermissionManager } from '../../managers/AppPermissionManager';\nimport { AppPermissions } from '../AppPermissions';\n\nexport const AppSettingBridge = {\n    hasReadPermission(appId: string) {\n        if (!AppPermissionManager.hasPermission(appId, AppPermissions.setting.read)) {\n            throw new PermissionDeniedError({\n                appId,\n                missingPermissions: [AppPermissions.setting.read],\n            });\n        }\n    },\n    hasWritePermission(appId: string) {\n        if (!AppPermissionManager.hasPermission(appId, AppPermissions.setting.write)) {\n            throw new PermissionDeniedError({\n                appId,\n                missingPermissions: [AppPermissions.message.write],\n            });\n        }\n    },\n    getAll(appId: string): void {\n        return this.hasReadPermission(appId);\n    },\n    getOneById(id: string, appId: string): void {\n        return this.hasReadPermission(appId);\n    },\n    hideGroup(name: string, appId: string): void {\n        return this.hasWritePermission(appId);\n    },\n    hideSetting(id: string, appId: string): void {\n        return this.hasWritePermission(appId);\n    },\n    isReadableById(id: string, appId: string): void {\n        return this.hasReadPermission(appId);\n    },\n    updateOne(setting: ISetting, appId: string): void {\n        return this.hasWritePermission(appId);\n    },\n};\n"]}