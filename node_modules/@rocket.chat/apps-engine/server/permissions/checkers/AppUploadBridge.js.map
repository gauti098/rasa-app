{"version":3,"sources":["src/server/permissions/checkers/AppUploadBridge.ts"],"names":[],"mappings":";;;AAEA,8EAA2E;AAC3E,8EAA2E;AAC3E,sDAAmD;AAEtC,QAAA,eAAe,GAAG;IAC3B,iBAAiB,CAAC,KAAa;QAC3B,IAAI,CAAC,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACxE,MAAM,IAAI,6CAAqB,CAAC;gBAC5B,KAAK;gBACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,MAAM,CAAC,IAAI,CAAC;aACnD,CAAC,CAAC;SACN;IACL,CAAC;IACD,kBAAkB,CAAC,KAAa;QAC5B,IAAI,CAAC,2CAAoB,CAAC,aAAa,CAAC,KAAK,EAAE,+BAAc,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACzE,MAAM,IAAI,6CAAqB,CAAC;gBAC5B,KAAK;gBACL,kBAAkB,EAAE,CAAC,+BAAc,CAAC,MAAM,CAAC,KAAK,CAAC;aACpD,CAAC,CAAC;SACN;IACL,CAAC;IACD,OAAO,CAAC,EAAU,EAAE,KAAa;QAC7B,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,CAAC,MAAe,EAAE,KAAa;QACpC,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IACD,YAAY,CAAC,OAAuB,EAAE,MAAc,EAAE,KAAa;QAC/D,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;CACJ,CAAC","file":"AppUploadBridge.js","sourcesContent":["import { IUpload } from '../../../definition/uploads';\nimport { IUploadDetails } from '../../../definition/uploads/IUploadDetails';\nimport { PermissionDeniedError } from '../../errors/PermissionDeniedError';\nimport { AppPermissionManager } from '../../managers/AppPermissionManager';\nimport { AppPermissions } from '../AppPermissions';\n\nexport const AppUploadBridge = {\n    hasReadPermission(appId: string) {\n        if (!AppPermissionManager.hasPermission(appId, AppPermissions.upload.read)) {\n            throw new PermissionDeniedError({\n                appId,\n                missingPermissions: [AppPermissions.upload.read],\n            });\n        }\n    },\n    hasWritePermission(appId: string) {\n        if (!AppPermissionManager.hasPermission(appId, AppPermissions.upload.write)) {\n            throw new PermissionDeniedError({\n                appId,\n                missingPermissions: [AppPermissions.upload.write],\n            });\n        }\n    },\n    getById(id: string, appId: string): void {\n        return this.hasReadPermission(appId);\n    },\n    getBuffer(upload: IUpload, appId: string): void {\n        return this.hasReadPermission(appId);\n    },\n    createUpload(details: IUploadDetails, buffer: Buffer, appId: string): void {\n        return this.hasWritePermission(appId);\n    },\n};\n"]}