{"version":3,"sources":["src/server/managers/AppPermissionManager.ts"],"names":[],"mappings":"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","file":"AppPermissionManager.js","sourcesContent":["import { IPermission } from '../../definition/permissions/IPermission';\nimport { getPermissionsByAppId } from '../AppManager';\nimport { Bridge } from '../bridges/AppBridges';\nimport { PermissionDeniedError } from '../errors/PermissionDeniedError';\nimport { permissionCheckers } from '../permissions/checkers';\nimport { ROCKETCHAT_APP_EXECUTION_PREFIX } from '../ProxiedApp';\n\ninterface IBridgeCallDescriptor {\n    bridge: string;\n    method: string;\n    args: Array<any>;\n}\n\nexport class AppPermissionManager {\n    public static proxy<T extends Bridge & { [key: string]: any }>(bridge: T): T {\n        const handler = {\n            get(target, prop, receiver) {\n                const reflection = Reflect.get(target, prop, receiver);\n\n                if (typeof prop === 'symbol' || typeof prop === 'number') {\n                    return reflection;\n                }\n\n                if (typeof target[prop] === 'function') {\n                    return (...args: Array<any>) => {\n                        const hasPermission = AppPermissionManager.checkPermission({\n                            // TODO: (shiqi.mei@lolimay.cn) 2021-01-27\n                            // The permission checker's bridge name currently \"hard\" depends on the\n                            // bridge name on the Rocket.Chat side (app/apps/server/bridges). We need\n                            // to find a better implementation later to remove this unnecessary dependency.\n                            bridge: bridge.constructor.name,\n                            method: prop,\n                            args,\n                        });\n\n                        if (!hasPermission) {\n                            return;\n                        }\n\n                        return reflection.apply(target, args);\n                    };\n                }\n            },\n        } as ProxyHandler<T>;\n\n        return new Proxy(bridge, handler);\n    }\n\n    /**\n     * It returns the declaration of the permission if the app declared, or it returns `undefined`.\n     */\n    public static hasPermission<P extends IPermission>(appId: string, permission: P): P | undefined {\n        const grantedPermission = getPermissionsByAppId(appId).find(({ name }) => name === permission.name) as unknown;\n\n        if (!grantedPermission) {\n            return undefined;\n        }\n\n        return grantedPermission as P;\n    }\n\n    private static checkPermission(call: IBridgeCallDescriptor): boolean {\n        const { bridge, method, args } = call;\n\n        if (!permissionCheckers[bridge] || !permissionCheckers[bridge][method]) {\n            throw new Error(`No permission checker found for the bridge method \"${ bridge }.${ method }\"\\n`\n                + 'Please create a new checker one under the permissionCheckers folder to fix the issue.');\n        }\n\n        try {\n            permissionCheckers[bridge][method](...args);\n        } catch (err) {\n            if (err instanceof PermissionDeniedError) {\n                const { name, message } = err;\n\n                console.error(`${ name }: ${ message }\\n${ this.getCallStack() }`);\n                return false;\n            }\n            console.error(err);\n            return false;\n        }\n        return true;\n    }\n\n    private static getCallStack(): string {\n        const stack = new Error().stack.toString().split('\\n');\n        const appStackIndex = stack.findIndex((position) => position.includes(ROCKETCHAT_APP_EXECUTION_PREFIX));\n\n        return stack.slice(4, appStackIndex).join('\\n');\n    }\n}\n"]}